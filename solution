Some

(Map

(statefulSolution -> StatefulLogicSolution(Map

(

lst#1 -> Map(
((Seq(2, 1),Seq(0)),0) -> 2, 
((Seq(3, 0),Seq(1)),2) -> 2, 
((Seq(0, 0),Seq(1)),2) -> 0, 
((Seq(2, 0),Seq(0)),0) -> 1, 
((Seq(2, 0),Seq(0)),2) -> 2, 
((Seq(1, 0),Seq(1)),0) -> 0, 
((Seq(0, 1),Seq(0)),0) -> 0, 
((Seq(0, 0),Seq(0)),1) -> 0, 
((Seq(0, 0),Seq(1)),0) -> 0, 
((Seq(3, 1),Seq(1)),1) -> 1, 
((Seq(0, 0),Seq(0)),2) -> 0, 
((Seq(0, 1),Seq(1)),1) -> 0, 
((Seq(1, 1),Seq(0)),1) -> 0, 
((Seq(3, 0),Seq(1)),1) -> 0,
((Seq(3, 0),Seq(0)),0) -> 1,
((Seq(0, 0),Seq(1)),1) -> 0, 
((Seq(2, 0),Seq(1)),1) -> 0, 
((Seq(3, 1),Seq(1)),2) -> 2, 
((Seq(2, 1),Seq(1)),2) -> 2, 
((Seq(1, 1),Seq(0)),0) -> 0, 
((Seq(3, 0),Seq(0)),1) -> 1,
((Seq(2, 1),Seq(1)),0) -> 0,
((Seq(3, 0),Seq(1)),0) -> 0, 
((Seq(3, 1),Seq(1)),0) -> 0, 
((Seq(3, 1),Seq(0)),2) -> 2, 
((Seq(2, 0),Seq(1)),0) -> 0, 
((Seq(1, 0),Seq(1)),1) -> 0, 
((Seq(2, 0),Seq(0)),1) -> 1, 
((Seq(1, 0),Seq(0)),1) -> 0, 
((Seq(0, 0),Seq(0)),0) -> 0, 
((Seq(1, 0),Seq(1)),2) -> 0,
((Seq(1, 1),Seq(1)),0) -> 0, 
((Seq(1, 1),Seq(0)),2) -> 0, 
((Seq(2, 1),Seq(0)),2) -> 2, 
((Seq(3, 1),Seq(0)),0) -> 2, 
((Seq(0, 1),Seq(0)),2) -> 0, 
((Seq(2, 1),Seq(0)),1) -> 2,
((Seq(0, 1),Seq(1)),0) -> 0,
((Seq(2, 1),Seq(1)),1) -> 1, 
((Seq(1, 0),Seq(0)),2) -> 0, 
((Seq(3, 1),Seq(0)),1) -> 2, 
((Seq(1, 1),Seq(1)),2) -> 0,
((Seq(1, 1),Seq(1)),1) -> 0,
((Seq(2, 0),Seq(1)),2) -> 2, 
((Seq(0, 1),Seq(0)),1) -> 0,
((Seq(3, 0),Seq(0)),2) -> 2, 
((Seq(1, 0),Seq(0)),0) -> 0,
((Seq(0, 1),Seq(1)),2) -> 0), 

lin12#2 -> Map(

((List(1),List(0)),5) -> 5, 
((List(1),List(1)),3) -> 5, 
((List(0),List(0)),0) -> 0, 
((List(0),List(1)),2) -> 1, 
((List(1),List(0)),2) -> 5, 
((List(1),List(1)),1) -> 1, 
((List(0),List(0)),2) -> 1, 
((List(1),List(0)),4) -> 5, 
((List(0),List(1)),0) -> 0, 
((List(0),List(1)),5) -> 5, 
((List(1),List(0)),3) -> 5, 
((List(0),List(0)),3) -> 2, 
((List(0),List(1)),4) -> 1, 
((List(0),List(1)),3) -> 1, 
((List(1),List(1)),5) -> 5, 
((List(0),List(0)),4) -> 3, 
((List(1),List(1)),0) -> 0, 
((List(0),List(1)),1) -> 1, 
((List(1),List(0)),1) -> 1, 
((List(1),List(1)),4) -> 5, 
((List(1),List(0)),0) -> 0, 
((List(0),List(0)),5) -> 5, 
((List(0),List(0)),1) -> 1, 
((List(1),List(1)),2) -> 5

), 


let23#1 -> Map(
((Seq(2, 1),Seq[Int]()),0) -> 1, 
((Seq(0, 0),Seq[Int]()),1) -> 0, 
((Seq(3, 1),Seq[Int]()),2) -> 2,
((Seq(3, 1),Seq[Int]()),1) -> 2, 
((Seq(3, 0),Seq[Int]()),1) -> 1, 
((Seq(3, 0),Seq[Int]()),2) -> 1, 
((Seq(0, 0),Seq[Int]()),0) -> 0, 
((Seq(0, 1),Seq[Int]()),1) -> 0, 
((Seq(2, 0),Seq[Int]()),1) -> 1, 
((Seq(2, 0),Seq[Int]()),2) -> 1, 
((Seq(3, 1),Seq[Int]()),0) -> 1, 
((Seq(0, 1),Seq[Int]()),0) -> 0, 
((Seq(1, 0),Seq[Int]()),0) -> 1, 
((Seq(2, 1),Seq[Int]()),1) -> 1, 
((Seq(0, 0),Seq[Int]()),2) -> 1, 
((Seq(1, 1),Seq[Int]()),2) -> 1, 
((Seq(3, 0),Seq[Int]()),0) -> 1, 
((Seq(0, 1),Seq[Int]()),2) -> 1, 
((Seq(1, 1),Seq[Int]()),0) -> 1, 
((Seq(1, 0),Seq[Int]()),2) -> 1, 
((Seq(2, 0),Seq[Int]()),0) -> 1, 
((Seq(1, 0),Seq[Int]()),1) -> 1, 
((Seq(1, 1),Seq[Int]()),1) -> 1, 
((Seq(2, 1),Seq[Int]()),2) -> 1)
),

Map(
lst#1 -> Map(2 -> 1, 1 -> 0, 0 -> 0), 
lin12#2 -> Map(2 -> 2, 5 -> 3, 4 -> 2, 1 -> 1, 3 -> 2, 0 -> 0), 
let23#1 -> Map(2 -> 1, 1 -> 0, 0 -> 0)
),

Map(
lst#1 -> 1, 
lin12#2 -> 4, 
let23#1 -> 1))))